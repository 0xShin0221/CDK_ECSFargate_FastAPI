[[source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[dev-packages]
aws-cdk-core = "*"
aws-cdk-aws-ecr = "*"
aws-cdk-aws-ec2 = "*"
aws-cdk-aws-ecs = "*"
aws-cdk-aws-ecs-patterns = "*"
aws-cdk-aws-iam = "*"
python-dotenv = "*"

[packages]
starlette = "*"
fastapi = "*"
uvicorn = "*"

[requires]
python_version = "3.8"

[scripts]
start = "bash -c 'cd backend && uvicorn main:api --reload --host 0.0.0.0 --port ${PORT}'"
docker_build = "docker build -t ${REPOSITORY_IMAGE}  -f docker/api/Dockerfile ."
docker_run = "docker run -p ${PORT}:${PORT} ${REPOSITORY_IMAGE}"
docker_compose_up = "docker-compose -f docker/docker-compose.yml up"
ecr_login = "bash -c 'aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPOSITORY_IMAGE}'"
tagged_image="bash -c 'docker tag ${REPOSITORY_IMAGE} ${ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPOSITORY_IMAGE}:latest'"
push_to_ecr="bash -c 'docker push ${ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com/${REPOSITORY_IMAGE}:latest'"
deploy_image_ecr = "bash -c  'pipenv run tagged_image && pipenv run push_to_ecr'"
deploy_ecr_stack = "bash -c 'cd stacks && cdk deploy ${ECR_STACK_NAME}'"
deploy_ecs_stack = "bash -c 'cd stacks && cdk deploy ${ECS_STACK_NAME}'"
cdk = "bash -c 'cd stacks'"
cdk_ls = "bash -c 'cd stacks && cdk ls'"
cdk_diff = "bash -c 'cd stacks && cdk diff'"
cdk_doctor = "bash -c 'cd stacks && cdk doctor'"
